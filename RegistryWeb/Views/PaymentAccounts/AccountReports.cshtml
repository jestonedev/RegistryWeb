@using RegistryServices.ViewModel.Payments
@using RegistryDb.Models.Entities.Payments
@using RegistryWeb.Extensions;
@model PaymentsVM;
@{
    Context.Session.Set("Controller", "PaymentAccounts");
    Context.Session.Set("Action", "AccountReports");
    ViewData["Title"] = "Мастер массовых операций над лицевыми счетами";
    var text = "Количество записей: " + Model.PageOptions.TotalRows;
    var canEdit = ViewBag.CanEdit;
    var errorPayments = (List<Payment>)ViewData["ErrorPayments"];
    var emails = (Dictionary<int, List<string>>)ViewData["Emails"];
}

@section Scripts
{
    <script src="~/js/paymentAccount.reports.js" asp-append-version="true"></script>
}

<div class="col status"></div>

<h1>@ViewData["Title"]</h1>
<h4 class="mb-3">@text</h4>

@if (errorPayments != null && errorPayments.Any())
{
    <div class="alert alert-danger text-center">
        <p class="mb-0">
            Во время массовой операции были пропущены лицевые счета со следующими номерами:
            @(errorPayments.Select(v => v.PaymentAccountNavigation.Account.ToString()).Aggregate((acc, v) => acc + ", " + v))
        </p>
        <p class="mb-0">Причина: @ViewBag.ErrorReason</p>
    </div>
}

    <div class="alert alert-primary text-center rr-errorsinv" style="display:none;">@**@
        <p class="mb-0 rr-errorsinv-item"></p>
    </div>

<div class="form-row">
    <div class="form-group col-md-1 col-lg-3">
        <a class="form-control btn btn-primary" asp-controller="PaymentAccounts" asp-action="Index" asp-route-isBack="true">Назад</a>
    </div>
    <div class="form-group col-md-2 col-lg-3">
        <a class="form-control btn btn-primary" asp-controller="PaymentAccounts" asp-action="ClearSessionIds">Очистить</a>
    </div>
    <div class="form-group col-md-3 col-lg-3">
        <div class="dropdown">
            <button class="btn btn-success dropdown-toggle col-md-12" type="button" id="reportButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                <span class="oi oi-document"></span>  Отчеты
            </button>
            <div class="dropdown-menu" aria-labelledby="reportButton">
                <button class="dropdown-item rr-report-request-to-bsk" @(Model.Payments.Any() ? "" : "disabled") href="#" data-id-account="0">Запрос в БКС</button>
                <button class="dropdown-item" id="exportBtn" @(Model.Payments.Any() ? "" : "disabled") href="#">Экспорт</button>
            </div>
        </div>
    </div>
    <div class="form-group col-md-3 col-lg-3">
        <div class="dropdown">
            <button class="btn btn-info dropdown-toggle col-md-12" type="button" id="operationsButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                <span class="oi oi-pencil"></span>  Операции
            </button>
            <div class="dropdown-menu dropdown-menu-right" aria-labelledby="operationsButton">
                <button class="dropdown-item" @(canEdit && Model.Payments.Any() ? "" : "disabled") href="#" id="addClaim">Создать претензионно-исковую работу</button>
                <button class="dropdown-item rr-report-rig-send" @(Model.Payments.Any() ? "" : "disabled") href="#" data-id-account="0">Отправить счёт-извещение</button>
                <button class="dropdown-item rr-report-rig-export" @(Model.Payments.Any() ? "" : "disabled") href="#" data-id-account="0">Сформировать счёт-извещение</button>
            </div>
        </div>
    </div>
</div>

<table class="table table-hover">
    <thead>
        <tr>
            <th>№ по реестру</th>
            <th>Адрес</th>
            <th>Электронная почта</th>
            <th width="100px"></th>
        </tr>
    </thead>
    <tbody>
        @if (Model.Payments.Any())
        {
            foreach (var item in Model.Payments)
            {
                <tr>
                    <td>@item.PaymentAccountNavigation.Account</td>
                    <td>
                        @if (Model.RentObjects.ContainsKey(item.IdAccount))
                        {
                            <div class="mb-2">
                                <b>По жилищному фонду: </b><br />
                                @foreach (var address in Model.RentObjects[item.IdAccount])
                                {
                                    @await Component.InvokeAsync("PaymentsAddressComponent", new { address = address, idAccount = item.IdAccount })
                                }
                            </div>
                        }
                        <div>
                            <b>По БКС: </b><br />@item.PaymentAccountNavigation.RawAddress<br />
                            @item.PaymentAccountNavigation.Crn
                        </div>
                    </td>
                    <td>
                        @if(emails.ContainsKey(item.IdAccount))
                        {
                            foreach(var email in emails[item.IdAccount])
                            {
                                <div>@email</div>
                            }
                        }
                    </td>
                    <td>
                        <div class="btn-group" role="group" aria-label="Панель доступа">
                            <a class="btn btn-primary oi oi-eye" title="Подробнее" aria-label="Подробнее"
                               asp-action="Details" asp-controller="PaymentAccounts" asp-route-idAccount="@item.IdAccount"></a>
                            <a class="btn btn-danger oi oi-x" title="Удалить" aria-label="Удалить"
                               asp-action="RemoveSessionId" asp-controller="PaymentAccounts" asp-route-id="@item.IdAccount"></a>
                        </div>
                    </td>
                </tr>
            }
        }
        else
        {
            <tr><td colspan="3" class="text-center"><i>Элементы отсутствуют</i></td></tr>
        }

    </tbody>
</table>

<page-link page-model="Model.PageOptions" page-action="Index"></page-link>

<partial name="ReportsModals" model="@Model">