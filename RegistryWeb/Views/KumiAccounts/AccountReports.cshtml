@using RegistryDb.Models.Entities.KumiAccounts
@using RegistryWeb.Extensions;
@using RegistryWeb.Enums;
@model RegistryServices.ViewModel.KumiAccounts.KumiAccountsVM;
@{
    Context.Session.Set("Controller", "KumiAccounts");
    Context.Session.Set("Action", "AccountReports");
    ViewData["Title"] = "Мастер массовых операций над лицевыми счетами";
    var text = "Количество записей: " + Model.PageOptions.TotalRows;
    var canEdit = ViewBag.CanEdit;
    var errorAccounts = (List<KumiAccount>)ViewData["ErrorAccounts"];
    var emails = (Dictionary<int, List<string>>)ViewData["Emails"];
}

@section styles
    {
    <link rel="stylesheet" href="~/css/kumi.accounts.css" runat="server" />
}

@section Scripts
    {
    <script src="~/js/index.kumi.accounts.js" asp-append-version="true"></script>
    <script src="~/js/kumiAccount.reports.js" asp-append-version="true"></script>
    <script src="~/js/kumiAccount.recalc.js" asp-append-version="true"></script>
}

<div class="col status"></div>

<h1>@ViewData["Title"]</h1>
<h4 class="mb-3">@text</h4>

@if (errorAccounts != null && errorAccounts.Any())
{
    <div class="alert alert-danger text-center">
        <p class="mb-0">
            Во время массовой операции были пропущены лицевые счета со следующими номерами:
            @(errorAccounts.Select(v => v.Account.ToString()).Aggregate((acc, v) => acc + ", " + v))
        </p>
        <p class="mb-0">Причина: @ViewBag.ErrorReason</p>
    </div>
}

<div class="alert alert-primary text-center rr-errorsinv" style="display:none;">
    @**@
    <p class="mb-0 rr-errorsinv-item"></p>
</div>

<div class="form-row">
    <div class="form-group col-md-1 col-lg-3">
        <a class="form-control btn btn-primary" asp-controller="KumiAccounts" asp-action="Index" asp-route-isBack="true">Назад</a>
    </div>
    <div class="form-group col-md-2 col-lg-3">
        <a class="form-control btn btn-primary" asp-controller="KumiAccounts" asp-action="ClearSessionIds">Очистить</a>
    </div>
    <div class="form-group col-md-3 col-lg-3">
        <div class="dropdown">
            <button class="btn btn-success dropdown-toggle col-md-12" type="button" id="reportButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                <span class="oi oi-document"></span>  Отчеты
            </button>
            <div class="dropdown-menu" aria-labelledby="reportButton">
                <button class="dropdown-item" id="exportBtn" @(Model.Accounts.Any() ? "" : "disabled") href="#">Экспорт</button>
            </div>
        </div>
    </div>
    <div class="form-group col-md-3 col-lg-3">
        <div class="dropdown">
            <button class="btn btn-info dropdown-toggle col-md-12" type="button" id="operationsButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                <span class="oi oi-pencil"></span>  Операции
            </button>
            <div class="dropdown-menu dropdown-menu-right" aria-labelledby="operationsButton">
                <button class="dropdown-item" @(canEdit && Model.Accounts.Any() ? "" : "disabled") href="#" id="addClaim">Создать претензионно-исковую работу</button>
                <button class="dropdown-item rr-report-rig-send" @(Model.Accounts.Any() ? "" : "disabled") href="#" data-id-account="0" data-last-charge-year="@DateTime.Now.Year" data-last-charge-month="@DateTime.Now.Month">Отправить счёт-извещение</button>
                <button class="dropdown-item rr-report-rig-export" @(Model.Accounts.Any() ? "" : "disabled") href="#" data-id-account="0" data-last-charge-year="@DateTime.Now.Year" data-last-charge-month="@DateTime.Now.Month">Сформировать счёт-извещение</button>
                <button class="dropdown-item rr-report-recalc" @(Model.Accounts.Any() ? "" : "disabled") href="#" data-id-account="0">Выполнить перерасчет</button>
            </div>
        </div>
    </div>
</div>

<table class="table table-hover">
    <thead>
        <tr>
            <th class="r-table-header-cell" style="min-width: 30%">
                Лицевой счет
            </th>
            <th class="r-table-header-cell">
                Найм
            </th>
            <th>Электронная почта</th>
            <th width="100px"></th>
        </tr>
    </thead>
    <tbody>
        @if (Model.Accounts.Any())
        {
            foreach (var item in Model.Accounts)
            {
                var payment = 0m;
                if (Model.TenancyInfo.ContainsKey(item.IdAccount))
                {
                    var tenancyInfos = Model.TenancyInfo[item.IdAccount];
                    var activeTenancies = tenancyInfos.Where(r => r.TenancyProcess.TenancyPersons.Any(p => p.ExcludeDate == null || p.ExcludeDate > DateTime.Now)
                    && (r.TenancyProcess.RegistrationNum == null || !r.TenancyProcess.RegistrationNum.EndsWith("н")));
                    if (activeTenancies.Any())
                    {
                        payment = activeTenancies.Select(r => r.RentObjects.Sum(ro => ro.PaymentAfter28082019)).Sum();
                    }
                }

                <tr>
                    <td>
                        <div>
                            <b>№ ЛС:</b> @item.Account
                            <span class="oi oi-media-record ml-1 @(item.IdState == 1 ? "text-success" :  item.IdState == 2 ? "text-danger" : "text-warning")"
                                  title="@(item.IdState == 1 ? "Действующий" : item.IdState == 2 ? "Аннулированный" : item.IdState == 3 ? "Не начисляется плата за найм" : "Не начисляется пени и плата за найм")" style="font-size: 80%"></span>
                        </div>
                        @if (!String.IsNullOrWhiteSpace(@item.AccountGisZkh))
                        {
                            <div title="Единый лицевой счет для ГИС ЖКХ">
                                <b>ЕЛС для ГИС ЖКХ:</b> @item.AccountGisZkh
                            </div>
                        }

                        @if (!String.IsNullOrWhiteSpace(@item.Owner))
                        {
                            <div><b>Владелец ЛС: </b><br />@item.Owner</div>
                        }
                        <div>
                            <b>Дата начисления:</b> @(item.LastChargeDate.HasValue ? item.LastChargeDate.Value.ToString("dd.MM.yyyy") : "н/а")
                        </div>
                        <hr class="m-0 mt-2 mb-1" />
                        <div>
                            <b>Сальдо итого:</b> @(item.CurrentBalanceTenancy + item.CurrentBalancePenalty) руб.
                        </div>
                        <div>
                            Найм: @item.CurrentBalanceTenancy руб., пени: @item.CurrentBalancePenalty руб.
                        </div>
                        <div>
                            <b>Плата за найм: </b>@payment руб.
                        </div>
                    </td>
                    <td>
                        @if (Model.TenancyInfo.ContainsKey(item.IdAccount))
                        {
                            var tenancyInfos = Model.TenancyInfo[item.IdAccount].OrderByDescending(r => r.TenancyProcess.IdProcess);
                            @for (var i = 0; i < tenancyInfos.Count(); i++)
                            {
                                var tenancyInfo = tenancyInfos.ElementAt(i);
                                <div class="@(i == 0 ? "" : "rr-account-additional-info")">
                                    <div>
                                        @if (!string.IsNullOrEmpty(tenancyInfo.TenancyProcess.RegistrationNum))
                                        {
                                            <b>Договор:</b>
                                            <span>
                                                № @tenancyInfo.TenancyProcess.RegistrationNum
                                                @(tenancyInfo.TenancyProcess.RegistrationDate.HasValue ? "от " + tenancyInfo.TenancyProcess.RegistrationDate.Value.ToString("dd.MM.yyyy") : "")
                                            </span>
                                        }
                                        else
                                        {
                                            <b>Рег. №: </b><span>@tenancyInfo.TenancyProcess.IdProcess</span>
                                        }
                                        <a class="btn oi oi-eye p-0 text-primary rr-account-list-eye-btn"
                                           asp-action="Details" asp-controller="TenancyProcesses"
                                           asp-route-returnUrl="@($"{Context.Request.Scheme}://{Context.Request.Host}{Context.Request.Path}{Context.Request.QueryString}")"
                                           asp-route-idProcess="@tenancyInfo.TenancyProcess.IdProcess"></a>
                                    </div>
                                    <div>
                                        @{
                                            var snp = tenancyInfo.Tenant?.Surname + " " + tenancyInfo.Tenant?.Name + " " + tenancyInfo.Tenant?.Patronymic;
                                            snp = snp.Trim();
                                        }

                                        <b>Наниматель:</b> @(string.IsNullOrEmpty(snp) ? Html.Raw("<span class='text-danger'>не указан</span>") : Html.Raw(snp))
                                    </div>
                                    <div>
                                        <b>Период найма:</b>
                                        @if (((tenancyInfo.TenancyProcess.BeginDate != null || tenancyInfo.TenancyProcess.EndDate != null) &&
                              tenancyInfo.TenancyProcess.TenancyRentPeriods.Any()) || tenancyInfo.TenancyProcess.TenancyRentPeriods.Count() > 1)
                                        {
                                            <br />
                                        }
                                        @if (tenancyInfo.TenancyProcess.BeginDate != null || tenancyInfo.TenancyProcess.EndDate != null)
                                        {
                                            @(tenancyInfo.TenancyProcess.BeginDate.HasValue ? "с " + tenancyInfo.TenancyProcess.BeginDate.Value.ToString("dd.MM.yyyy") : "")@(" ")
                                            @(tenancyInfo.TenancyProcess.EndDate.HasValue ? "по " + tenancyInfo.TenancyProcess.EndDate.Value.ToString("dd.MM.yyyy") : "на период ТО")
                                        }
                                        @if (tenancyInfo.TenancyProcess.TenancyRentPeriods.Any())
                                        {
                                            @if (tenancyInfo.TenancyProcess.BeginDate != null || tenancyInfo.TenancyProcess.EndDate != null)
                                            {
                                                <br />
                                            }
                                            for (var j = 0; j < tenancyInfo.TenancyProcess.TenancyRentPeriods.Count; j++)
                                            {
                                                var period = tenancyInfo.TenancyProcess.TenancyRentPeriods[j];
                                                @if (period.BeginDate != null || period.EndDate != null)
                                                {
                                                    @(period.BeginDate.HasValue ? "с " + period.BeginDate.Value.ToString("dd.MM.yyyy") : "")@(" ")
                                                    @(period.EndDate.HasValue ? "по " + period.EndDate.Value.ToString("dd.MM.yyyy") : "на период ТО")
                                                }
                                                if (j < tenancyInfo.TenancyProcess.TenancyRentPeriods.Count - 1)
                                                {
                                                    <br />
                                                }
                                            }
                                        }
                                        @if (tenancyInfo.TenancyProcess.BeginDate == null && tenancyInfo.TenancyProcess.EndDate == null && !tenancyInfo.TenancyProcess.TenancyRentPeriods.Any())
                                        {
                                            <span class="text-danger">не указан</span>
                                        }
                                    </div>
                                    <div>
                                        <b>Договор зарегистрирован:</b>
                                        @if (tenancyInfo.TenancyProcess.RegistrationDate != null)
                                        {
                                            <span>@tenancyInfo.TenancyProcess.RegistrationDate.Value.ToString("dd.MM.yyyy")</span>
                                        }
                                        else
                                        {
                                            <span class="text-danger">не указан</span>
                                        }
                                    </div>
                                    <div>
                                        <b>Адрес:</b>
                                        @foreach (var rentObject in tenancyInfo.RentObjects)
                                        {
                                            if (tenancyInfo.RentObjects.Count > 1)
                                            {
                                                <br />
                                            }
                                            if (rentObject.Address.AddressType == AddressTypes.SubPremise || rentObject.Address.AddressType == AddressTypes.Premise)
                                            {
                                                <span>@rentObject.Address.Text</span>
                                                <a class="btn oi oi-eye p-0 text-primary rr-account-list-eye-btn"
                                                   asp-action="Details" asp-controller="Premises"
                                                   asp-route-returnUrl="@($"{Context.Request.Scheme}://{Context.Request.Host}{Context.Request.Path}{Context.Request.QueryString}")"
                                                   asp-route-idPremises="@rentObject.Address.Id"></a>
                                            }
                                            else
                                            if (rentObject.Address.AddressType == AddressTypes.Building)
                                            {
                                                <span>@rentObject.Address.Text</span>
                                                <a class="btn oi oi-eye p-0 text-primary rr-account-list-eye-btn"
                                                   asp-action="Details" asp-controller="Buildings"
                                                   asp-route-returnUrl="@($"{Context.Request.Scheme}://{Context.Request.Host}{Context.Request.Path}{Context.Request.QueryString}")"
                                                   asp-route-idBuilding="@rentObject.Address.Id"></a>
                                            }
                                        }
                                    </div>
                                    @if (i < tenancyInfos.Count() - 1)
                                    {
                                        <hr class="m-0 mt-2 mb-1" />
                                    }
                                </div>
                            }
                            if (tenancyInfos.Count() > 1)
                            {
                                <div class="text-center  mt-2">
                                    <a class="text-dark rr-additional-info" title="Детальная информация" href="#"><span class="oi oi-chevron-bottom"></span></a>
                                </div>
                            }
                        }
                        else
                        {
                            <span class="text-danger font-italic">н/а</span>
                        }
                    </td>
                    <td>
                        @if (emails.ContainsKey(item.IdAccount))
                        {
                            foreach (var email in emails[item.IdAccount])
                            {
                                <div>@email</div>
                            }
                        }
                    </td>
                    <td>
                        <div class="btn-group" role="group" aria-label="Панель доступа">

                            <a class="btn btn-primary oi oi-eye" title="Подробнее" aria-label="Подробнее" target="_blank"
                               asp-action="Details"
                               asp-route-idAccount="@item.IdAccount"
                               asp-route-action="Details"
                               asp-route-returnUrl="@($"{Context.Request.Scheme}://{Context.Request.Host}{Context.Request.Path}{Context.Request.QueryString}")"></a>


                            <a class="btn btn-danger oi oi-x" title="Удалить" aria-label="Удалить"
                               asp-action="RemoveSessionId" asp-controller="KumiAccounts" asp-route-id="@item.IdAccount"></a>
                        </div>
                    </td>
                </tr>
            }
        }
        else
        {
            <tr><td colspan="4" class="text-center"><i>Элементы отсутствуют</i></td></tr>
        }

    </tbody>
</table>

<page-link page-model="Model.PageOptions" page-action="Index"></page-link>

<partial name="AccountAdvModals" model="@Model">
<partial name="AccountCommonModals" model="@Model">
