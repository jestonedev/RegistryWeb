@using RegistryWeb.ViewOptions;
@using RegistryWeb.Enums;
@using RegistryDb.Models.Entities.RegistryObjects.Premises;
@using RegistryWeb.Extensions;
@using RegistryWeb.SecurityServices;
@using RegistryWeb.DataServices;
@using RegistryWeb.DataHelpers;
@model RegistryServices.ViewModel.RegistryObjects.PremisesVM<Premise>;
@{
    var ids = Context.Session.Get<List<int>>("idPremises") ?? new List<int>();
    Context.Session.Set("Controller", "Premises");
    Context.Session.Set("Action", "Index");
    Context.Session.Set("OrderOptions", Model.OrderOptions);
    Context.Session.Set("FilterOptions", Model.FilterOptions);
    Context.Session.Set("PageOptions", Model.PageOptions);
    var check = "";

    var securityService = (SecurityService)ViewData["SecurityService"];

    string GetTypeFund(Premise premise)
    {
        var fundsHistory = premise.FundsPremisesAssoc.Select(fpa => fpa.IdFundNavigation);
        var fundHistory = fundsHistory
            .FirstOrDefault(fh => fh.ExcludeRestrictionDate == null && fh.IdFund == fundsHistory.Max(f => f.IdFund));
        if (fundHistory == null)
            return "";
        return fundHistory.IdFundTypeNavigation.FundTypeName;
    }
}

@section styles{
    <link rel="stylesheet" href="~/css/premise.css" runat="server" />
}

<table class="table table-hover p-table">
    <thead>
        <tr style="align-content: center;">
            <th class="r-table-header-cell">
            </th>
            <th class="r-table-header-cell" style="width:70px;">
                №
                @if (Model.OrderOptions.OrderDirection == OrderDirection.Descending && Model.OrderOptions.OrderField == "IdPremises")
                {
                    <a href="#" class="oi oi-sort-descending sort p-sorted" data-order-field="IdPremises" data-order-direction="0"></a>
                }
                else
                {
                    <a href="#" class="oi oi-sort-ascending sort @(Model.OrderOptions.OrderField == "IdPremises" ? "p-sorted" : "")"
                       data-order-field="IdPremises" data-order-direction="@(Model.OrderOptions.OrderField == "IdPremises" ? "1" : "0")"></a>
                }
            </th>
            <th>
                Адрес
                @if (Model.OrderOptions.OrderDirection == OrderDirection.Descending && Model.OrderOptions.OrderField == "Address")
                {
                    <a href="#" class="oi oi-sort-descending sort p-sorted" data-order-field="Address" data-order-direction="0"></a>
                }
                else
                {
                    <a href="#" class="oi oi-sort-ascending sort @(Model.OrderOptions.OrderField == "Address" ? "p-sorted" : "")"
                       data-order-field="Address" data-order-direction="@(Model.OrderOptions.OrderField == "Address" ? "1" : "0")"></a>
                }
            </th>
            <th class="r-table-header-cell p-table-low-width-hide-cell">
                Доп. характеристики
                @if (Model.OrderOptions.OrderDirection == OrderDirection.Descending && Model.OrderOptions.OrderField == "ObjectState")
                {
                    <a href="#" class="oi oi-sort-descending sort p-sorted" title="Сортировка по текущему состоянию" data-order-field="ObjectState" data-order-direction="0"></a>
                }
                else
                {
                    <a href="#" class="oi oi-sort-ascending sort @(Model.OrderOptions.OrderField == "ObjectState" ? "p-sorted" : "")"
                       data-order-field="ObjectState" title="Сортировка по текущему состоянию" data-order-direction="@(Model.OrderOptions.OrderField == "ObjectState" ? "1" : "0")"></a>
                }
            </th>
            <th class="p-table-low-width-hide-cell">
                Найм
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Premises)
        {
        <tr style="position: relative">
            @{
                if (ids.Contains(item.IdPremises))
                {
                    check = "checked";
                }
                else
                {
                    check = "";
                }
                var idCurrentOwhershipType = Model.PremisesOwnershipRightCurrent
                    .FirstOrDefault(p => p.IdPremises == item.IdPremises)
                    ?.IdOwnershipRightType;
                var backgroundColor =
                    idCurrentOwhershipType == 1 ? "#FEDCDC" :
                    idCurrentOwhershipType == 2 ? "#BBFEE8" :
                    idCurrentOwhershipType == 7 ? "#88FF63" :
                    idCurrentOwhershipType == 8 ? "#EAABE0" :
                    "white";
                var title =
                    idCurrentOwhershipType == 1 ? "Присутствует реквизит \"Снесено\"" :
                    idCurrentOwhershipType == 2 ? "Присутствует реквизит \"Аварийное\"" :
                    idCurrentOwhershipType == 7 ? "Присутствует реквизит \"Аварийное после 01.01.2012\"" :
                    idCurrentOwhershipType == 8 ? "Присутствует реквизит \"Признан непригодным\"" :
                    "";
                var address = item.IdBuildingNavigation?.IdStreetNavigation?.StreetLong + ", д." + item.IdBuildingNavigation?.House +
                    ", " + item.IdPremisesTypeNavigation?.PremisesTypeShort + item.PremisesNum;
            }
            <td class="align-middle">
                <input type="checkbox" class="idCheckbox" data-id="@item.IdPremises" @Html.Raw(check) />
            </td>

            <td style="background-color: @backgroundColor; font-weight: bold; vertical-align: middle" title="@title">
                @item.IdPremises
            </td>
            <td>
                <div class="row">
                    <div class="col-auto">
                        <a class="btn btn-success oi oi-home" title="Здание" aria-label="Здание" asp-action="Details" asp-controller="Buildings" asp-route-idBuilding="@item.IdBuilding" asp-route-returnUrl="@($"{Context.Request.Scheme}://{Context.Request.Host}{Context.Request.Path}{Context.Request.QueryString}")"></a>
                    </div>
                    <div class="col-xl-10 col-lg-9 col-md-10">
                        @address
                        <div class="dopinfo">
                            Общая площадь: @item.TotalArea<span> м<sup>2</sup></span>, этаж: @item.Floor<br />
                            Кадастровый номер: @item.CadastralNum
                        </div>
                    </div>
                </div>
            </td>

            <td class="p-table-low-width-hide-cell">
                <div class="dopinfo-alt">
                    <span>Состояние: <b class="text-success">@item.IdStateNavigation?.StateNeutral</b></span><br />
                    <span>Тип помещения: @item.IdPremisesTypeNavigation?.PremisesTypeName</span><br />
                    @if (ObjectStateHelper.IsMunicipal(item.IdState))
                    {
                        <span>Фонд: @GetTypeFund(item)</span><br />
                    }
                    @if (item.IdPremisesComment != 1)
                    {
                        <span>Примечание: @item.IdPremisesCommentNavigation?.PremisesCommentText</span>
                    }
                </div>
            </td>
            <td class="p-table-low-width-hide-cell" style="min-width: 200px; position: relative">
                <div class="dopinfo-alt">
                    @if (securityService.HasPrivilege(Privileges.TenancyRead))
                    {
                        var paymentInfo =
                                Model.PaymentsInfo.Where(pi => (pi.IdObject == item.IdPremises && pi.AddresType == AddressTypes.Premise) ||
                                    (item.SubPremises.Select(sp => sp.IdSubPremises).Any(id => id == pi.IdObject) && pi.AddresType == AddressTypes.SubPremise));

                        @if (paymentInfo.Any())
                        {
                            <div class="text-primary"><b>Плата за найм</b></div>
                            <span>№1827 от 12.08.2014:</span> @paymentInfo.Select(p => p.Payment).Sum() <span>руб.</span><br />
                            <span>№1558 от 28.08.2019:</span> @paymentInfo.Select(p => p.PaymentAfter28082019).Sum() <span>руб.</span>
                            @if (Model.AreaAvgCostActualDate != null && Model.AreaAvgCostActualDate > DateTime.Now.Date)
                            {
                                <br />
                                <span class="text-danger"><i>Действительна с @Model.AreaAvgCostActualDate.Value.ToString("dd.MM.yyyy")</i></span>
                            }
                        }

                        @if (Model.ActiveTenancies.Any(t => t.Key == item.IdPremises))
                        {
                            <hr class="mt-1 mb-0 pt-0 pb-0" />
                            var tenancies = Model.ActiveTenancies.First(t => t.Key == item.IdPremises).Value;
                            for (var i = 0; i < tenancies.Count; i++)
                            {
                                var tenancy = tenancies[i];
                                <div class="@(i > 0 ? "mt-2" : "")">
                                    <div class="text-primary"><b>Договор найма:</b></div>
                                    <div>
                                        @(string.IsNullOrEmpty(tenancy.RegistrationNum) ? "№ б/н" : "№ " + tenancy.RegistrationNum)
                                        @(tenancy.RegistrationDate.HasValue ? " от " + tenancy.RegistrationDate.Value.ToString("dd.MM.yyyy") : "")
                                    </div>
                                    <div>
                                        @if (tenancy.BeginDate != null || tenancy.EndDate != null)
                                        {
                                            <div class="text-success"><b>Период действия:</b></div>
                                            <div>
                                                @(tenancy.BeginDate.HasValue ? "С " + tenancy.BeginDate.Value.ToString("dd.MM.yyyy") : "") @(tenancy.EndDate.HasValue ? "по " + tenancy.EndDate.Value.ToString("dd.MM.yyyy") : "на период ТО")
                                            </div>
                                        }
                                    </div>
                                </div>
                            }
                        }
                    }
                </div>
                @{
                    var canDeleteBaseInfo =
                        (securityService.HasPrivilege(Privileges.RegistryWriteMunicipal) && securityService.HasPrivilege(Privileges.RegistryWriteNotMunicipal)) ||
                        (securityService.HasPrivilege(Privileges.RegistryWriteMunicipal) && ObjectStateHelper.IsMunicipal(item.IdState) && !item.SubPremises.Any(sp => !ObjectStateHelper.IsMunicipal(sp.IdState))) ||
                        (securityService.HasPrivilege(Privileges.RegistryWriteNotMunicipal) && !ObjectStateHelper.IsMunicipal(item.IdState) && !item.SubPremises.Any(sp => ObjectStateHelper.IsMunicipal(sp.IdState)));
                    var canEditResettleInfo = securityService.HasPrivilege(Privileges.RegistryWriteResettleInfo);
                    var canEditLitigationInfo = securityService.HasPrivilege(Privileges.RegistryWriteLitigationInfo);
                }
                <div class="btn-group rr-opacity-item-menu" role="group" aria-label="Панель доступа">
                    @if ((securityService.HasPrivilege(Privileges.RegistryWriteMunicipal) && ObjectStateHelper.IsMunicipal(item.IdState)) ||
                         (securityService.HasPrivilege(Privileges.RegistryWriteNotMunicipal) && !ObjectStateHelper.IsMunicipal(item.IdState)) || 
                         canEditResettleInfo || canEditLitigationInfo)
                    {
                        <a class="btn btn-primary oi oi-eye" id="premisedetail" title="Подробнее" aria-label="Подробнее"
                           asp-controller="Premises" asp-action="Details" asp-route-idPremises="@item.IdPremises" asp-route-returnUrl="@($"{Context.Request.Scheme}://{Context.Request.Host}{Context.Request.Path}{Context.Request.QueryString}")"></a>
                        <a class="btn btn-outline-dark oi oi-pencil" title="Изменить" aria-label="Изменить"
                           asp-controller="Premises" asp-action="Edit" asp-route-idPremises="@item.IdPremises" asp-route-returnUrl="@($"{Context.Request.Scheme}://{Context.Request.Host}{Context.Request.Path}{Context.Request.QueryString}")"></a>
                        <a class="btn btn-primary oi oi-layers @(canDeleteBaseInfo ? "" : "disabled")" title="Копировать" aria-label="Копировать"
                           asp-controller="Premises" asp-action="Create" asp-route-idPremises="@item.IdPremises" asp-route-returnUrl="@($"{Context.Request.Scheme}://{Context.Request.Host}{Context.Request.Path}{Context.Request.QueryString}")"></a>
                        <a class="btn btn-danger oi oi-x @(canDeleteBaseInfo ? "" : "disabled")" title="Удалить" aria-label="Удалить"
                           asp-controller="Premises" asp-action="Delete" asp-route-idPremises="@item.IdPremises" asp-route-returnUrl="@($"{Context.Request.Scheme}://{Context.Request.Host}{Context.Request.Path}{Context.Request.QueryString}")"></a>
                    }
                    else
                    {
                        <a class="btn btn-primary oi oi-eye" title="Подробнее" aria-label="Подробнее"
                           asp-controller="Premises" asp-action="Details" asp-route-idPremises="@item.IdPremises" asp-route-action="Details" asp-route-returnUrl="@($"{Context.Request.Scheme}://{Context.Request.Host}{Context.Request.Path}{Context.Request.QueryString}")"></a>
                    }
                    <div class="btn-group" role="group" aria-label="Панель доступа">

                        <button class="btn btn-dark oi oi-grid-two-up dropdown-toggle" type="button" title="Связанные объекты" aria-label="Связанные объекты" id="objectsBtn_@item.IdPremises" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"></button>
                        <div class="dropdown-menu dropdown-menu-right" aria-labelledby="objectsBtn_@item.IdPremises">
                            <a class="dropdown-item" title="История фонда" aria-label="История фонда"
                               asp-controller="FundsHistory" asp-action="Index" asp-route-idObject="@item.IdPremises" asp-route-typeObject="Premise" asp-route-returnUrl="@($"{Context.Request.Scheme}://{Context.Request.Host}{Context.Request.Path}{Context.Request.QueryString}")">История фонда</a>

                            @if (securityService.HasPrivilege(Privileges.TenancyRead))
                            {
                                <a class="dropdown-item" title="Найм помещения" aria-label="Найм помещения"
                                   asp-controller="TenancyProcesses" asp-action="Index"
                                   asp-route-filterOptions.IdPremises="@item.IdPremises"
                                   asp-route-filterOptions.Address.AddressType="Premise"
                                   asp-route-filterOptions.Address.Id="@item.IdPremises"
                                   asp-route-filterOptions.Address.Text="@address">Процессы найма</a>


                                var paymentInfo =
                                            Model.PaymentsInfo.Where(pi => (pi.IdObject == item.IdPremises && pi.AddresType == AddressTypes.Premise) ||
                                                (item.SubPremises.Select(sp => sp.IdSubPremises).Any(id => id == pi.IdObject) && pi.AddresType == AddressTypes.SubPremise));

                                @if (paymentInfo.Any())
                                {
                                    <a class="dropdown-item" target="_blank" title="История изменения платы за найм" asp-controller="TenancyProcesses" asp-action="PaymentHistory" asp-route-id="@item.IdPremises" asp-route-target="@PaymentHistoryTarget.Premise" id="button-addon2">
                                        История изменения платы за найм
                                    </a>
                                }
                            }
                            @if (securityService.HasPrivilege(Privileges.OwnerRead))
                            {
                                <a class="dropdown-item" title="Собственники помещения" aria-label="Собственники помещения"
                                   asp-controller="OwnerProcesses" asp-action="Index"
                                   asp-route-filterOptions.Address.AddressType="Premise"
                                   asp-route-filterOptions.Address.Id="@item.IdPremises"
                                   asp-route-filterOptions.Address.Text="@address">Процессы собственности</a>
                            }
                            @if (securityService.HasPrivilege(Privileges.ClaimsRead))
                            {
                                <a class="dropdown-item" title="Лицевые счета БКС" aria-label="Лицевые счета"
                                   asp-controller="PaymentAccounts" asp-action="Index"
                                   asp-route-filterOptions.IdPremises="@item.IdPremises"
                                   asp-route-filterOptions.Address.AddressType="Premise"
                                   asp-route-filterOptions.Address.Id="@item.IdPremises"
                                   asp-route-filterOptions.Address.Text="@address">Лицевые счета БКС</a>
                                <a class="dropdown-item" title="Исковые работы" aria-label="Исковые работы"
                                   asp-controller="Claims" asp-action="Index"
                                   asp-route-filterOptions.IdPremises="@item.IdPremises"
                                   asp-route-filterOptions.Address.AddressType="Premise"
                                   asp-route-filterOptions.Address.Id="@item.IdPremises"
                                   asp-route-filterOptions.Address.Text="@address">Исковые работы</a>
                            }
                        </div>
                    </div>
                    <div class="btn-group" role="group" aria-label="Отчеты">
                        <button class="btn btn-success oi oi-document dropdown-toggle" type="button" title="Отчеты" aria-label="Отчеты" id="reportsBtn_@item.IdPremises" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"></button>
                        <div class="dropdown-menu dropdown-menu-right" aria-labelledby="reportsBtn_@item.IdPremises">
                            @if (ObjectStateHelper.IsMunicipal(item.IdState))
                            {
                                <a class="dropdown-item rr-report-premise-excerpt" href="#" title="Выписка на помещение" aria-label="Выписка на помещение" data-id-premise="@item.IdPremises">Выписка на помещение</a>
                                <a class="dropdown-item rr-report-mun-sub-premises-excerpt" href="#" title="Выписка на мун. комнаты" aria-label="Выписка на мун. комнаты" data-id-premise="@item.IdPremises">Выписка на мун. комнаты</a>
                            }
                            <a class="dropdown-item rr-report-premise-notice-to-bks" href="#" title="Извещение в БКС" aria-label="Извещение в БКС" data-id-premise="@item.IdPremises">Извещение в БКС</a>
                            <a class="dropdown-item rr-report-premise-area" href="#" title="Справка о площади помещения" aria-label="Справка о площади помещения" data-id-premise="@item.IdPremises">Справка о площади помещения</a>
                        </div>
                    </div>
                </div>
            </td>
        </tr>
        }
    </tbody>
</table>
