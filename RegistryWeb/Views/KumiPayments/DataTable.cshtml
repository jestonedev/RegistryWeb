@using RegistryWeb.Extensions;
@using RegistryWeb.ViewOptions;
@using RegistryWeb.SecurityServices;
@using RegistryDb.Models.Entities.KumiAccounts;
@using RegistryServices.Models.KumiPayments;
@model RegistryServices.ViewModel.KumiAccounts.KumiPaymentsVM;
@{
    var ids = Context.Session.Get<List<int>>("idPayments") ?? new List<int>();
    var check = "";
    Context.Session.Set("Controller", "KumiPayments");
    Context.Session.Set("Action", "Index");
    Context.Session.Set("OrderOptions", Model.OrderOptions);
    Context.Session.Set("FilterOptions", Model.FilterOptions);
    Context.Session.Set("PageOptions", Model.PageOptions);
    var securityService = (SecurityService)ViewData["SecurityService"];
    var kbkDescriptions = (List<KumiKbkDescription>)ViewBag.KbkDescriptions;
}

<table class="table table-hover rr-payments-table">
    <thead>
        <tr style="align-content: center;">
            <th class="r-table-header-cell">
            </th>
            <th class="r-table-header-cell">
            </th>
            <th class="r-table-header-cell">
                Платеж
                @if (Model.OrderOptions.OrderDirection == OrderDirection.Descending && Model.OrderOptions.OrderField == "Date")
                {
                    <a href="#" title="Сортировка по дате платежа" class="oi oi-sort-descending sort tp-sorted" data-order-field="Date" data-order-direction="0"></a>
                }
                else
                {
                    <a href="#" title="Сортировка по дате платежа" class="oi oi-sort-ascending sort @(Model.OrderOptions.OrderField == "Date" ? "tp-sorted" : "")"
                       data-order-field="Date" data-order-direction="@(Model.OrderOptions.OrderField == "Date" ? "1" : "0")"></a>
                }
            </th>
            <th class="r-table-header-cell d-lg-table-cell text-nowrap">
                Распределен на
            </th>
            <th class="r-table-header-cell">
                <div class="d-none d-lg-table-cell">
                    Плательщик и назначение платежа
                </div>
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Payments)
        {
        var paymentRequisits = "";
        if (!string.IsNullOrEmpty(item.NumDocument) || item.DateDocument != null)
        {
            if (!string.IsNullOrEmpty(item.NumDocument))
            {
                paymentRequisits += "№ " + item.NumDocument;
            }
            if (item.DateDocument != null)
            {
                paymentRequisits += " от " + item.DateDocument.Value.ToString("dd.MM.yyyy");
            }
        }
        else
        if (string.IsNullOrEmpty(item.NumDocument) && item.DateDocument == null && !string.IsNullOrEmpty(item.Uin))
        {
            paymentRequisits += "УИН " + item.Uin;
        }
        else
        {
            paymentRequisits += "ID " + item.IdPayment;
        }

        var sum = item.Sum;
        var sumPosted = item.PaymentCharges.Select(r => r.TenancyValue + r.PenaltyValue + r.DgiValue + r.PkkValue + r.PadunValue).Sum() + 
                item.PaymentClaims.Select(r => r.TenancyValue + r.PenaltyValue + r.DgiValue + r.PkkValue + r.PadunValue).Sum();
        <tr style="position: relative" class="@(item.IdPayment == Model.FilterOptions.IdParentPayment ? "text-success" : "")" title="@(item.IdPayment == Model.FilterOptions.IdParentPayment ? "Родительский платеж" : "")">
           
            @{
                if (ids.Contains(item.IdPayment))
                {
                    check = "checked";
                }
                else
                {
                    check = "";
                }
            }
            <td class="align-middle">
                <input type="checkbox" class="idCheckbox" data-id="@item.IdPayment" @Html.Raw(check) />
            </td>
            <td style="vertical-align: middle; text-align: center" class="@(sumPosted == sum ? "table-success" : "")" title="@(sumPosted == sum ? "Платеж полностью распределен" : "")">

                @if (item.IdSource == 7)
                {
                    <span class="badge badge-primary">ВТБ</span>
                }
                else
                if (item.IdSource == 6)
                {
                <span class="badge badge-danger">БКС</span>
                }
                else
                if (new int[] { 2, 3, 4, 5 }.Contains(item.IdSource))
                {
                <span class="badge badge-success">УФК</span>
                }

                @{
                    var warning = "";
                    var cssClass = "";
                    if (sumPosted > sum)
                    {
                        warning = "Распределеная сумма превышает фактическую по платежу";
                        cssClass = "text-danger";
                    }
                    else
                    if (sumPosted > 0 && sum > sumPosted)
                    {
                        warning = "Платеж распределен не полностью";
                        cssClass = "text-warning";
                    }
                    else
                    if (sumPosted == 0 && sum != 0)
                    {
                        warning = "Платеж не распределен";
                        cssClass = "text-warning";
                    }
                }

                <span class="oi oi-bell rr-payment-bell @cssClass @(string.IsNullOrEmpty(warning) ? "d-none" : "")" style="font-size: 80%" title="@warning"></span>

                @if (item.ChildPayments.Any() && item.IdPayment != Model.FilterOptions.IdParentPayment)
                {
                    <a asp-action="Index" asp-route-filterOptions.IdParentPayment="@item.IdPayment" title="Платеж был разбит при применении мемориального ордера или является детализированным сводным платежным поручением. Для отображения связных платежей кликните по этой иконке">
                        <span class="oi oi-link-intact text-primary" style="font-size: 80%"></span>
                    </a>
                }
                @if (item.IdPayment == Model.FilterOptions.IdParentPayment && item.IdParentPayment != null)
                {
                    <a asp-action="Index" asp-route-filterOptions.IdParentPayment="@item.IdParentPayment" title="К родительскому платежу">
                        <span class="oi oi-arrow-top text-primary" style="font-size: 80%"></span>
                    </a>
                }
            </td>
            <td>
                @{
                    var isPl = item.IdSource == 3 || item.IdSource == 5;
                }

                @if (!string.IsNullOrEmpty(item.NumDocument) || item.DateDocument != null)
                {
                    <div>
                        <b class="text-nowrap">@(isPl ? "Распоряжение" : "Платежный документ"):</b><br />
                        @if (!string.IsNullOrEmpty(item.NumDocument))
                        {
                            <span>№ @item.NumDocument</span>
                        }
                        @if (!string.IsNullOrEmpty(item.NumDocument) && item.DateDocument != null)
                        {
                            <span> </span>
                        }
                        @if (item.DateDocument != null)
                        {
                            <span>от @item.DateDocument.Value.ToString("dd.MM.yyyy")</span>
                        }
                    </div>
                }

                @if (item.DateEnrollUfk != null)
                {
                    <b>Дата выписки: </b> @item.DateEnrollUfk.Value.ToString("dd.MM.yyyy")
                }

                @if (!string.IsNullOrEmpty(item.Kbk))
                {
                    var description = kbkDescriptions.FirstOrDefault(r => r.Kbk == item.Kbk);
                    <div class="text-nowrap" title="@(description == null ? "Неизвестный КБК" : description.Description)">
                        <b>КБК:</b> @item.Kbk
                    </div>
                }

                <div>
                    <b>Сумма:</b> <span class="rr-payment-sum">@item.Sum руб.@(@sumPosted > 0 ? ", расп.: " + @sumPosted + " руб." : "")</span>
                </div>
                @if (!string.IsNullOrEmpty(item.Description))
                {
                    <div>
                        <b class="text-nowrap">Примечание:</b><br />
                        @item.Description
                    </div>
                }
            </td>
            <td class="d-lg-table-cell">
                @{
                    var accounts = Model.DistributionInfoToObjects.Where(r =>
                        r.ObjectType == RegistryServices.Enums.KumiPaymentDistributeToEnum.ToKumiAccount &&
                        r.IdPayment == item.IdPayment).Select(r => (KumiPaymentDistributionInfoToAccount)r).ToList();
                    var claims = Model.DistributionInfoToObjects.Where(r =>
                        r.ObjectType == RegistryServices.Enums.KumiPaymentDistributeToEnum.ToClaim &&
                        r.IdPayment == item.IdPayment).Select(r => (KumiPaymentDistributionInfoToClaim)r).ToList();
                }
                @if (!accounts.Any() && !claims.Any())
                {
                    <div class="text-danger"><i>Не распределен</i></div>
                }
                else
                if (Model.FilterOptions.IdAccount != null || Model.FilterOptions.IdCharge != null)
                {
                    var accountChargeInfo = accounts.Where(r => r.IdPayment == item.IdPayment &&
                        ((Model.FilterOptions.IdAccount != null && Model.FilterOptions.IdAccount == r.IdAccount) ||
                         (Model.FilterOptions.IdCharge != null && Model.FilterOptions.IdCharge == r.IdCharge)))
                         .GroupBy(r => r.IdAccount).Select(r => new {
                             TenancyValue = r.Sum(v => v.DistrubutedToTenancySum),
                             PenaltyValue = r.Sum(v => v.DistrubutedToPenaltySum),
                             DgiValue = r.Sum(v => v.DistrubutedToDgiSum),
                             PkkValue = r.Sum(v => v.DistrubutedToPkkSum),
                             PadunValue = r.Sum(v => v.DistrubutedToPadunSum),
                         })
                         .FirstOrDefault();


                    var claimChargeInfo = claims.Where(r => r.IdPayment == item.IdPayment &&
                        ((Model.FilterOptions.IdAccount != null && Model.FilterOptions.IdAccount == r.IdAccountKumi) ||
                         (Model.FilterOptions.IdCharge != null && Model.FilterOptions.IdCharge == r.IdCharge)))
                        .GroupBy(r => r.IdClaim).Select(r => new { IdClaim = r.Key,
                            TenancyValue = r.Sum(v => v.DistrubutedToTenancySum),
                            PenaltyValue = r.Sum(v => v.DistrubutedToPenaltySum),
                            DgiValue = r.Sum(v => v.DistrubutedToDgiSum),
                            PkkValue = r.Sum(v => v.DistrubutedToPkkSum),
                            PadunValue = r.Sum(v => v.DistrubutedToPadunSum)
                        });

                    <span class="text-nowrap"><b>На данный ЛС:</b></span>
                    <span class="text-nowrap">
                        <br />найм @Math.Round(accountChargeInfo?.TenancyValue ?? 0, 2) руб.
                        <br />пени @Math.Round(accountChargeInfo?.PenaltyValue ?? 0, 2) руб.
                        @if (accountChargeInfo?.DgiValue != 0 && accountChargeInfo?.DgiValue != null)
                        {
                            <br /><span>ДГИ @Math.Round(accountChargeInfo?.DgiValue ?? 0, 2) руб.</span>
                        }
                        @if (accountChargeInfo?.PkkValue != 0 && accountChargeInfo?.PkkValue != null)
                        {
                            <br /><span>ПКК @Math.Round(accountChargeInfo?.PkkValue ?? 0, 2) руб.</span>
                        }
                        @if (accountChargeInfo?.PadunValue != 0 && accountChargeInfo?.PadunValue != null)
                        {
                            <br /><span>Падун @Math.Round(accountChargeInfo?.PadunValue ?? 0, 2) руб.</span>
                        }
                    </span>

                    if (claimChargeInfo.Any())
                    {
                        <br />
                        <br />
                    }
                    @for (var i = 0; i < claimChargeInfo.Count(); i++)
                    {
                        var claim = claimChargeInfo.ElementAt(i);
                        <span class="text-nowrap">
                            <b>
                                <a target="_blank" style="text-decoration: underline"
                                   asp-action="Details" asp-controller="Claims" asp-route-idClaim="@claim.IdClaim"
                                   asp-route-returnUrl="@($"{Context.Request.Scheme}://{Context.Request.Host}{Context.Request.Path}{Context.Request.QueryString}")">
                                    ИР №@claim.IdClaim:
                                </a>
                            </b>
                        </span>
                        
                        <span class="text-nowrap">
                            <br />найм @Math.Round(claim.TenancyValue, 2) руб.
                            <br />пени @Math.Round(claim.PenaltyValue, 2) руб.
                            @if (claim.DgiValue != 0)
                            {
                                <br /><span>ДГИ @Math.Round(claim.DgiValue, 2) руб.</span>
                            }
                            @if (claim.PkkValue != 0)
                            {
                                <br /><span>ПКК @Math.Round(claim.PkkValue, 2) руб.</span>
                            }
                            @if (claim.PadunValue != 0)
                            {
                                <br /><span>Падун @Math.Round(claim.PadunValue, 2) руб.</span>
                            }
                        </span>
                        @if (i < claimChargeInfo.Count() - 1)
                        {
                            <br />
                            <br />
                        }
                    }
                }
                else
                if (Model.FilterOptions.IdClaim != null)
                {
                    var claimChargeInfo = claims.Where(r => r.IdPayment == item.IdPayment && r.IdClaim == Model.FilterOptions.IdClaim)
                        .GroupBy(r => r.IdClaim).Select(r => new {
                            TenancyValue = r.Sum(v => v.DistrubutedToTenancySum),
                            PenaltyValue = r.Sum(v => v.DistrubutedToPenaltySum),
                            DgiValue = r.Sum(v => v.DistrubutedToDgiSum),
                            PkkValue = r.Sum(v => v.DistrubutedToPkkSum),
                            PadunValue = r.Sum(v => v.DistrubutedToPadunSum)

                        })
                        .FirstOrDefault();
                    <span class="text-nowrap">
                        <b>
                            На данную ИР:
                        </b>
                    </span>
                    <span class="text-nowrap">
                        <br />найм @Math.Round(claimChargeInfo?.TenancyValue ?? 0, 2) руб.
                        <br />пени @Math.Round(claimChargeInfo?.PenaltyValue ?? 0, 2) руб.
                        @if (claimChargeInfo?.DgiValue != 0 && claimChargeInfo?.DgiValue != null)
                        {
                            <br /><span>ДГИ @Math.Round(claimChargeInfo?.DgiValue ?? 0, 2) руб.</span>
                        }
                        @if (claimChargeInfo?.PkkValue != 0 && claimChargeInfo?.PkkValue != null)
                        {
                            <br /><span>ПКК @Math.Round(claimChargeInfo?.PkkValue ?? 0, 2) руб.</span>
                        }
                        @if (claimChargeInfo?.PadunValue != 0 && claimChargeInfo?.PadunValue != null)
                        {
                            <br /><span>Падун @Math.Round(claimChargeInfo?.PadunValue ?? 0, 2) руб.</span>
                        }
                    </span>
                }
                else
                {
                    <div class="rr-payment-distribution-sum-details">
                        @foreach (var account in accounts.GroupBy(r => new { r.IdAccount, r.Account, r.Tenant })
                            .Select(r => new
                            {
                                r.Key.Account,
                                r.Key.IdAccount,
                                r.Key.Tenant,
                                DistrubutedToTenancySum = r.Sum(v => v.DistrubutedToTenancySum),
                                DistrubutedToPenaltySum = r.Sum(v => v.DistrubutedToPenaltySum),
                                DistrubutedToDgiSum = r.Sum(v => v.DistrubutedToDgiSum),
                                DistrubutedToPkkSum = r.Sum(v => v.DistrubutedToPkkSum),
                                DistrubutedToPadunSum = r.Sum(v => v.DistrubutedToPadunSum)
                            }))
                        {
                            <div class="text-nowrap">
                                <u>ЛС №@account.Account:</u>
                                <a class="btn oi oi-eye p-0 text-primary rr-payment-list-eye-btn" target="_blank" asp-controller="KumiAccounts" asp-action="Details" asp-route-idAccount="@account.IdAccount"></a>
                                @if (!string.IsNullOrEmpty(account.Tenant))
                                {
                                    <br />@account.Tenant
                                }
                                <br />найм @account.DistrubutedToTenancySum руб.
                                <br />пени @account.DistrubutedToPenaltySum руб.
                                @if(account.DistrubutedToDgiSum != 0)
                                {
                                     <br /><span>ДГИ @account.DistrubutedToDgiSum руб.</span>
                                }
                                @if(account.DistrubutedToPkkSum != 0)
                                {
                                     <br /><span>ПКК @account.DistrubutedToPkkSum руб.</span>
                                }
                                @if(account.DistrubutedToPadunSum != 0)
                                {
                                     <br /><span>Падун @account.DistrubutedToPadunSum руб.</span>
                                }
                            </div>
                            <br />
                        }
                        @foreach (var claim in claims.GroupBy(r => new { r.IdClaim, r.IdAccountKumi, r.Account, r.Tenant })
                .Select(r => new
                {
                    IdClaim = r.Key.IdClaim,
                    IdAccountKumi = r.Key.IdAccountKumi,
                    Account = r.Key.Account,
                    r.Key.Tenant,
                    DistrubutedToTenancySum = r.Sum(v => v.DistrubutedToTenancySum),
                    DistrubutedToPenaltySum = r.Sum(v => v.DistrubutedToPenaltySum),
                    DistrubutedToDgiSum = r.Sum(v => v.DistrubutedToDgiSum),
                    DistrubutedToPkkSum = r.Sum(v => v.DistrubutedToPkkSum),
                    DistrubutedToPadunSum = r.Sum(v => v.DistrubutedToPadunSum),
                }))
                        {
                            <div class="text-nowrap">
                                <u>ИР №@claim.IdClaim</u>
                                <a class="btn oi oi-eye p-0 text-primary rr-payment-list-eye-btn" target="_blank" asp-controller="Claims" asp-action="Details" asp-route-idClaim="@claim.IdClaim"></a>
                                <br />
                                <u>ЛС №@claim.Account:</u>
                                <a class="btn oi oi-eye p-0 text-primary rr-payment-list-eye-btn" target="_blank" asp-controller="KumiAccounts" asp-action="Details" asp-route-idAccount="@claim.IdAccountKumi"></a>
                                @if (!string.IsNullOrEmpty(claim.Tenant))
                                {
                                    <br />@claim.Tenant
                                }
                                <br />найм @claim.DistrubutedToTenancySum руб.
                                <br />пени @claim.DistrubutedToPenaltySum руб.
                                @if (claim.DistrubutedToDgiSum != 0)
                                {
                                    <br /><span>ДГИ @claim.DistrubutedToDgiSum руб.</span>
                                }
                                @if (claim.DistrubutedToPkkSum != 0)
                                {
                                    <br /><span>ПКК @claim.DistrubutedToPkkSum руб.</span>
                                }
                                @if (claim.DistrubutedToPadunSum != 0)
                                {
                                    <br /><span>Падун @claim.DistrubutedToPadunSum руб.</span>
                                }
                            </div>
                            <br />
                        }
                    </div>
                }
            </td>
            <td style="position: relative">
                <div class="d-none d-lg-table-cell">
                    @if (item.PayerInn != null && item.PayerInn != "0")
                    {
                        <div>
                            <b>ИНН:</b> @item.PayerInn
                        </div>
                    }
                    @if (item.PayerKpp != null && item.PayerKpp != "0")
                    {
                        <div>
                            <b>КПП:</b> @item.PayerKpp
                        </div>
                    }
                    @if (item.PayerName != null)
                    {
                        <div>
                            <b>Наименование:</b> @item.PayerName
                        </div>
                    }

                    <div>
                        <b>Назначениен платежа:</b><br /> <div title="@item.Purpose" class="rr-payment-purpose">@item.Purpose</div>
                    </div>
                </div>


                <div class="btn-group rr-opacity-item-menu" role="group" aria-label="Панель доступа">
                    <a class="btn btn-primary oi oi-eye" title="Подробнее" aria-label="Подробнее" target="_blank"
                       asp-action="Details"
                       asp-route-idPayment="@item.IdPayment"
                       asp-route-action="Details"
                       asp-route-returnUrl="@($"{Context.Request.Scheme}://{Context.Request.Host}{Context.Request.Path}{Context.Request.QueryString}")"></a>
                    @if (securityService.HasPrivilege(Privileges.AccountsWrite))
                    {
                        <a class="btn btn-outline-dark oi oi-pencil" title="Изменить" aria-label="Изменить" target="_blank"
                           asp-action="Edit"
                           asp-route-idPayment="@item.IdPayment"
                           asp-route-action="Edit"
                           asp-route-returnUrl="@($"{Context.Request.Scheme}://{Context.Request.Host}{Context.Request.Path}{Context.Request.QueryString}")"></a>
                        @if (item.IdSource == 1)
                        {
                            <a class="btn btn-danger oi oi-x" title="Удалить" aria-label="Удалить" target="_blank"
                               asp-action="Delete"
                               asp-route-idPayment="@item.IdPayment"
                               asp-route-returnUrl="@($"{Context.Request.Scheme}://{Context.Request.Host}{Context.Request.Path}{Context.Request.QueryString}")"></a>
                        }
                        <div class="btn-group" role="group" aria-label="Панель доступа">
                            <button class="btn btn-dark oi oi-grid-two-up dropdown-toggle" type="button" title="Операции" aria-label="Операции" id="objectsBtn_@item.IdPayment" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"></button>
                            <div class="dropdown-menu dropdown-menu-right" aria-labelledby="objectsBtn_@item.IdPayment">
                                <a class="dropdown-item rr-apply-memorial-order @(sumPosted == 0 ? "" : "d-none")" href="#" title="Привязать мемориальный ордер" aria-label="Привязать мемориальный ордер" data-id-payment="@item.IdPayment">Привязать мемориальный ордер</a>
                                <a class="dropdown-item rr-distribute-payment @(item.Sum > sumPosted ? "" : "d-none")" href="#" title="Распределить платеж" aria-label="Распределить платеж" data-id-payment="@item.IdPayment" data-payment-sum="@item.Sum" data-payment-sum-posted="@sumPosted">Распределить платеж</a>
                                <a class="dropdown-item rr-cancel-distribute-payment @(sumPosted > 0 ? "" : "d-none")" href="#" title="Отменить распределение платежа" aria-label="Отменить распределение платежа" data-id-payment="@item.IdPayment" data-payment-sum="@item.Sum" data-payment-sum-posted="@sumPosted" data-payment-title="@paymentRequisits">Отменить распределение платежа</a>
                            </div>
                        </div>
                    }
                    <div class="btn-group" role="group" aria-label="Отчеты">
                        <button class="btn btn-success oi oi-document dropdown-toggle" type="button" title="Отчеты" aria-label="Отчеты" id="reportsBtn_@item.IdPayment" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"></button>
                        <div class="dropdown-menu dropdown-menu-right" aria-labelledby="reportsBtn_@item.IdPayment">
                            <a class="dropdown-item" asp-controller="KumiPaymentsReports" asp-action="GetPaymentOrder" title="Платежное поручение" aria-label="Платежное поручение" asp-route-idPayment="@item.IdPayment">Платежное поручение</a>
                        </div>
                    </div>
                </div>
            </td>
        </tr>
    }
        </tbody>
    </table>