@using RegistryWeb.Extensions;
@using RegistryWeb.ViewOptions;
@using RegistryWeb.SecurityServices;
@using RegistryWeb.ViewModel;
@using RegistryServices.ViewModel.KumiAccounts;
@model RegistryServices.ViewModel.Claims.ClaimsVM;
@{
    var ids = Context.Session.Get<List<int>>("idClaims") ?? new List<int>();
    var check = "";

    Context.Session.Set("Controller", "Claims");
    Context.Session.Set("Action", "Index");
    Context.Session.Set("OrderOptions", Model.OrderOptions);
    Context.Session.Set("FilterOptions", Model.FilterOptions);
    Context.Session.Set("PageOptions", Model.PageOptions);
    var securityService = (SecurityService)ViewData["SecurityService"];
}

<table class="table table-hover c-table">
    <thead>
        <tr style="align-content: center;">
            <th class="r-table-header-cell">
            </th>
            <th class="r-table-header-cell" style="width:70px;">
                №
                @if (Model.OrderOptions.OrderDirection == OrderDirection.Descending && Model.OrderOptions.OrderField == "IdClaim")
                {
                    <a href="#" title="Сортировка по реестровому номеру" class="oi oi-sort-descending sort c-sorted" data-order-field="IdClaim" data-order-direction="0"></a>
                }
                else
                {
                    <a href="#" title="Сортировка по реестровому номеру" class="oi oi-sort-ascending sort @(Model.OrderOptions.OrderField == "IdClaim" ? "c-sorted" : "")"
                       data-order-field="IdClaim" data-order-direction="@(Model.OrderOptions.OrderField == "IdClaim" ? "1" : "0")"></a>
                }
            </th>
            <th class="r-table-header-cell">
                Информация об ИР
                @if (Model.OrderOptions.OrderDirection == OrderDirection.Descending && Model.OrderOptions.OrderField == "AtDate")
                {
                    <a href="#" title="Сортировка по дате формирования"
                       class="oi oi-sort-descending sort c-sorted" data-order-field="AtDate" data-order-direction="0"></a>
                }
                else
                {
                    <a href="#" title="Сортировка по дате формирования"
                       class="oi oi-sort-ascending sort @(Model.OrderOptions.OrderField == "AtDate" ? "c-sorted" : "")"
                       data-order-field="AtDate" data-order-direction="@(Model.OrderOptions.OrderField == "AtDate" ? "1" : "0")"></a>
                }
            </th>
            <th class="r-table-header-cell">
                Адрес
                @if (Model.OrderOptions.OrderDirection == OrderDirection.Descending && Model.OrderOptions.OrderField == "Address")
                {
                    <a href="#" title="Сортировка по адресу жилищного фонда" class="oi oi-sort-descending sort c-sorted" data-order-field="Address" data-order-direction="0"></a>
                }
                else
                {
                    <a href="#" title="Сортировка по адресу жилищного фонда" class="oi oi-sort-ascending sort @(Model.OrderOptions.OrderField == "Address" ? "c-sorted" : "")"
                       data-order-field="Address" data-order-direction="@(Model.OrderOptions.OrderField == "Address" ? "1" : "0")"></a>
                }
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Claims)
        {
            List<KumiAccountTenancyInfoVM> kumiTenancyInfo = null;
            List<KumiAccountTenancyInfoVM> activeKumiTenancyInfo = null;
            if (item.IdAccountKumi != null && Model.TenancyInfoKumi.ContainsKey(item.IdAccountKumi.Value))
            {
                kumiTenancyInfo = Model.TenancyInfoKumi[item.IdAccountKumi.Value];
                activeKumiTenancyInfo = kumiTenancyInfo.Where(r => r.TenancyProcess.TenancyPersons.Any(p => p.ExcludeDate == null || p.ExcludeDate > DateTime.Now)
                && (r.TenancyProcess.RegistrationNum == null || !r.TenancyProcess.RegistrationNum.EndsWith("н"))).ToList();
            }
            RegistryDb.Models.Entities.Payment lastPaymentInfo = null;
            if (item.IdAccount != null && Model.LastPaymentInfo.ContainsKey(item.IdAccount.Value))
            {
                lastPaymentInfo = Model.LastPaymentInfo[item.IdAccount.Value];
            }
            var lastClaimState = item.ClaimStates.OrderByDescending(cs => cs.IdState).FirstOrDefault();
            var isOpenedClaim = (lastClaimState == null || lastClaimState.IdStateType != 6);
            <tr style="position: relative">
                @if (ids.Contains(item.IdClaim))
                {
                    check = "checked";
                }
                else
                {
                    check = "";
                }
                <td class="align-middle"><input type="checkbox" class="idCheckbox" data-id="@item.IdClaim" @Html.Raw(check) /></td>

                <td style="@(isOpenedClaim ? "background-color: #FEDCDC" : "")" title="@(isOpenedClaim ? "Претензионно-исковая работа не завершена" : "")">
                    @item.IdClaim
                </td>
                <td>
                    <a class="float-right ml-2 text-dark rr-claim-details" title="Детальная информация" href="#"><span class="oi oi-chevron-bottom"></span></a>
                    @{
                        var accountBks = "";
                        var accountKumi = "";
                        if (item.IdAccount != null || item.IdAccountAdditional != null)
                        {
                            accountBks =
                                (item.IdAccountNavigation == null ? "" : item.IdAccountNavigation.Account) +
                                (item.IdAccountNavigation != null && item.IdAccountAdditionalNavigation != null ? " / " : "") +
                                (item.IdAccountAdditionalNavigation == null ? "" : item.IdAccountAdditionalNavigation.Account);
                        }
                        if (item.IdAccountKumi != null)
                        {
                            accountKumi = item.IdAccountKumiNavigation.Account;
                        }
                    }
                    @if (accountKumi == accountBks && accountBks != "")
                    {
                        <div>
                            <b>Лицевой счет КУМИ/БКС:</b> @accountKumi
                        </div>
                    }
                    else
                    {
                        if (item.IdAccount != null)
                        {
                            <div>
                                <b>Лицевой счет БКС:</b> @accountBks
                            </div>
                        }
                        if (item.IdAccountKumi != null)
                        {
                            <div>
                                <b>Лицевой счет КУМИ:</b> @accountKumi
                            </div>
                        }
                    }
                    @{
                        var tenantBks = "";
                        var tenantKumi = "";
                        if (lastPaymentInfo != null)
                        {
                            tenantBks = lastPaymentInfo.Tenant;
                        }
                        if (kumiTenancyInfo != null && kumiTenancyInfo.Any())
                        {
                            RegistryDb.Models.Entities.TenancyPerson tenant = null;
                            if (activeKumiTenancyInfo.Any())
                            {
                                tenant = activeKumiTenancyInfo.FirstOrDefault().Tenant;
                            }
                            else
                            {
                                tenant = kumiTenancyInfo.FirstOrDefault().Tenant;
                            }
                            tenantKumi = tenant.Surname + " " + tenant.Name + (string.IsNullOrEmpty(tenant.Patronymic) ? "" : " " + tenant.Patronymic);
                        }
                    }
                    @if (tenantKumi == tenantBks && tenantBks != "")
                    {
                        <div>
                            <b>Наниматель КУМИ/БКС:</b> @tenantBks
                        </div>
                    }
                    else
                    {
                        if (tenantBks != "")
                        {
                            <div>
                                <b>Наниматель БКС:</b> @tenantBks
                            </div>
                        }
                        if (tenantKumi != "")
                        {
                            <div>
                                <b>Наниматель КУМИ:</b> @tenantKumi
                            </div>
                        }
                        else
                        if (item.IdAccountKumi != null)
                        {
                            <div>
                                <b>Наниматель КУМИ:</b> <span class="text-danger"><i>не привязан процесс найма</i></span>
                            </div>
                        }
                    }
                    <div class="rr-claim-detail" style="display: none">
                        <b>Дата формирования:</b> @(item.AtDate != null ? item.AtDate.Value.ToString("dd.MM.yyyy") : "н/а")
                    </div>
                    <div class="rr-claim-detail" style="display: none">
                        @if (item.StartDeptPeriod != null || item.EndDeptPeriod != null)
                        {
                            <b>Предъявлен период:</b><br />
                            if (item.StartDeptPeriod != null)
                            {
                                <span>с </span>@item.StartDeptPeriod.Value.ToString("dd.MM.yyyy")
                            }
                            @if (item.EndDeptPeriod != null)
                            {
                                <span>по </span>@item.EndDeptPeriod.Value.ToString("dd.MM.yyyy")
                            }
                            else
                            {
                                <span>бессрочно</span>
                            }
                        }
                    </div>

                    <div class="rr-claim-detail" style="display: none">
                        @{
                            var courtClaimState = item.ClaimStates.FirstOrDefault(r => r.IdStateType == 4);
                        }
                        @if (courtClaimState != null && !string.IsNullOrEmpty(courtClaimState.CourtOrderNum))
                        {
                            <b>Номер с/п:</b> @courtClaimState.CourtOrderNum
                        }
                    </div>

                    @if (lastClaimState != null)
                    {
                        var stateType = Model.StateTypes.FirstOrDefault(st => st.IdStateType == lastClaimState.IdStateType);
                        <div class="rr-claim-detail" style="display: none">
                            <b>Текущее состояние: </b><br />@stateType.StateType <sup><span class="badge badge-danger pb-1">@(item.EndedForFilter ? "Искл. при фильтрации ЛС" : "")</span></sup>
                        </div>
                        @if (lastClaimState.DateStartState != null)
                        {
                            <div class="rr-claim-detail" style="display: none">
                                <b>Дата установки: </b>@lastClaimState.DateStartState.Value.ToString("dd.MM.yyyy")
                            </div>
                        }
                    }

                    <hr class="m-0 mt-2 mb-1" />
                    <div>
                        <a class="float-right ml-2 text-dark rr-amount-details" title="Детальная информация" href="#"><span class="oi oi-chevron-bottom"></span></a>
                        <b>Сумма к взысканию:</b><br />
                        <div>
                            Найм: @item.AmountTenancy руб.
                        </div>
                        @if (item.AmountPenalties != null && item.AmountPenalties != 0)
                        {
                            <div>
                                Пени: @item.AmountPenalties руб.
                            </div>
                        }
                        @if (item.AmountDgi != null && item.AmountDgi != 0)
                        {
                            <div>
                                ДГИ: @item.AmountDgi руб.
                            </div>
                        }
                        @if (item.AmountPadun != null && item.AmountPadun != 0)
                        {
                            <div>
                                Падун: @item.AmountPadun руб.
                            </div>
                        }
                        @if (item.AmountPkk != null && item.AmountPkk != 0)
                        {
                            <div>
                                ПКК: @item.AmountPkk руб.
                            </div>
                        }
                        <div>
                            <b>Итого:</b> @(item.AmountTenancy + item.AmountPenalties + item.AmountPkk + item.AmountPadun + item.AmountDgi)  руб.
                        </div>
                        @if (lastPaymentInfo != null)
                        {
                            <div class="rr-amount-detail mt-1" style="display: none">
                                <b>Сальдо БКС (посл. мес.) (вх. <span class="oi oi-arrow-right"></span> исх.):</b><br />
                                <div>
                                    Найм: @lastPaymentInfo.BalanceTenancy руб. <span class="oi oi-arrow-right"></span>  @lastPaymentInfo.BalanceOutputTenancy руб.
                                </div>
                                @if (lastPaymentInfo.BalanceInputPenalties != 0 || lastPaymentInfo.BalanceOutputPenalties != 0)
                                {
                                    <div>
                                        Пени: @lastPaymentInfo.BalanceInputPenalties руб. <span class="oi oi-arrow-right"></span>  @lastPaymentInfo.BalanceOutputPenalties руб.
                                    </div>
                                }
                                @if (lastPaymentInfo.BalanceDgi != 0 || lastPaymentInfo.BalanceOutputDgi != 0)
                                {
                                    <div>
                                        ДГИ: @lastPaymentInfo.BalanceDgi руб. <span class="oi oi-arrow-right"></span>  @lastPaymentInfo.BalanceOutputDgi руб.
                                    </div>
                                }
                                @if (lastPaymentInfo.BalancePadun != 0 || lastPaymentInfo.BalanceOutputPadun != 0)
                                {
                                    <div>
                                        Падун: @lastPaymentInfo.BalancePadun руб. <span class="oi oi-arrow-right"></span>  @lastPaymentInfo.BalanceOutputPadun руб.
                                    </div>
                                }
                                @if (lastPaymentInfo.BalancePkk != 0 || lastPaymentInfo.BalanceOutputPkk != 0)
                                {
                                    <div>
                                        ПКК: @lastPaymentInfo.BalancePkk руб. <span class="oi oi-arrow-right"></span>  @lastPaymentInfo.BalanceOutputPkk руб.
                                    </div>
                                }
                                <div>
                                    <b>Итого:</b> @lastPaymentInfo.BalanceInput руб. <span class="oi oi-arrow-right"></span>  @lastPaymentInfo.BalanceOutputTotal руб.
                                </div>
                            </div>
                        }
                        @if (item.IdAccountKumi != null)
                        {
                            <div class="rr-amount-detail mt-1" style="display: none">
                                <b>Сальдо КУМИ (текущее):</b><br />
                                <div>
                                    Найм: @item.IdAccountKumiNavigation.CurrentBalanceTenancy руб., пени: @item.IdAccountKumiNavigation.CurrentBalancePenalty руб.
                                </div>
                                <div>
                                    <b>Итого:</b> @(item.IdAccountKumiNavigation.CurrentBalanceTenancy + item.IdAccountKumiNavigation.CurrentBalancePenalty) руб.
                                </div>
                            </div>
                        }
                    </div>
                </td>
                <td style="position: relative">
                    @{
                        List<Address> rentObjectsKumi = null;
                        List<Address> rentObjectsBks = null;
                        if (item.IdAccountKumi != null)
                        {
                            if (kumiTenancyInfo != null && kumiTenancyInfo.Any())
                            {
                                rentObjectsKumi = kumiTenancyInfo.FirstOrDefault().RentObjects.Select(r => r.Address).ToList();
                                if (activeKumiTenancyInfo.Any())
                                {
                                    rentObjectsKumi = activeKumiTenancyInfo.FirstOrDefault().RentObjects.Select(r => r.Address).ToList();
                                }
                            }
                        }
                        if (item.IdAccount != null && Model.RentObjectsBks.ContainsKey(item.IdAccount.Value))
                        {
                            rentObjectsBks = Model.RentObjectsBks[item.IdAccount.Value];
                        }
                        var joinRentObjects = true;
                        if (rentObjectsKumi != null && rentObjectsBks != null && rentObjectsKumi.Count == rentObjectsBks.Count)
                        {
                            foreach (var rentObjectKumi in rentObjectsKumi)
                            {
                                if (!rentObjectsBks.Select(r => r.Text).Any(r => r == rentObjectKumi.Text))
                                {
                                    joinRentObjects = false;
                                }
                            }
                        }
                        else
                        {
                            joinRentObjects = false;
                        }
                    }
                    @if (joinRentObjects)
                    {
                        <div class="mb-2">
                            <b>По жилищному фонду (ЛС КУМИ/БКС): </b><br />
                            @foreach (var rentObject in rentObjectsKumi)
                            {
                                @await Component.InvokeAsync("ClaimsAddressComponent", new { address = rentObject, idClaim = item.IdClaim })
                            }
                        </div>
                    }
                    else
                    {
                        if (item.IdAccountKumi != null)
                        {
                            <div class="mb-2">
                                <b>По жилищному фонду (ЛС КУМИ): </b><br />

                                @if (rentObjectsKumi != null)
                                {
                                    if (rentObjectsKumi.Any())
                                    {
                                        @foreach (var rentObject in rentObjectsKumi)
                                        {
                                            @await Component.InvokeAsync("ClaimsAddressComponent", new { address = rentObject, idClaim = item.IdClaim })
                                        }
                                    } else
                                    {
                                        <span class="text-danger"><i>в найме не указан адрес</i></span>
                                    }
                                }
                                else
                                {
                                    <span class="text-danger"><i>не привязан процесс найма</i></span>
                                }
                            </div>
                        }
                        if (item.IdAccount != null && rentObjectsBks != null && rentObjectsBks.Any())
                        {
                            <div class="mb-2">
                                <b>По жилищному фонду (ЛС БКС): </b><br />
                                @foreach (var address in rentObjectsBks)
                                {
                                    @await Component.InvokeAsync("ClaimsAddressComponent", new { address = address, idClaim = item.IdClaim })
                                }
                            </div>
                        }
                    }
                    @if (item.IdAccount != null)
                    {
                        <div>
                            <b>По БКС: </b><br />@item.IdAccountNavigation.RawAddress<br />
                            @item.IdAccountNavigation.Crn
                        </div>
                    }

                    <div class="btn-group rr-opacity-item-menu" role="group" aria-label="Панель доступа">
                        @if (securityService.HasPrivilege(Privileges.ClaimsWrite))
                        {
                            <a class="btn btn-primary oi oi-eye" title="Подробнее" aria-label="Подробнее"
                               asp-controller="Claims" asp-action="Details" asp-route-idClaim="@item.IdClaim" asp-route-action="Details" asp-route-returnUrl="@($"{Context.Request.Scheme}://{Context.Request.Host}{Context.Request.Path}{Context.Request.QueryString}")"></a>
                            <a class="btn btn-outline-dark oi oi-pencil" title="Изменить" aria-label="Изменить"
                               asp-controller="Claims" asp-action="Edit" asp-route-idClaim="@item.IdClaim" asp-route-action="Edit" asp-route-returnUrl="@($"{Context.Request.Scheme}://{Context.Request.Host}{Context.Request.Path}{Context.Request.QueryString}")"></a>
                            <a class="btn btn-danger oi oi-x" title="Удалить" aria-label="Удалить"
                               asp-controller="Claims" asp-action="Delete" asp-route-idClaim="@item.IdClaim" asp-route-returnUrl="@($"{Context.Request.Scheme}://{Context.Request.Host}{Context.Request.Path}{Context.Request.QueryString}")"></a>
                        }
                        else
                        {
                            <a class="btn btn-primary oi oi-eye" title="Подробнее" aria-label="Подробнее"
                               asp-controller="Claims" asp-action="Details" asp-route-idClaim="@item.IdClaim" asp-route-action="Details" asp-route-returnUrl="@($"{Context.Request.Scheme}://{Context.Request.Host}{Context.Request.Path}{Context.Request.QueryString}")"></a>
                        }


                        <div class="btn-group" role="group" aria-label="Панель доступа">

                            <button class="btn btn-dark oi oi-grid-two-up dropdown-toggle" type="button" title="Связанные объекты" aria-label="Связанные объекты" id="objectsBtn_@item.IdClaim" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"></button>
                            <div class="dropdown-menu dropdown-menu-right" aria-labelledby="objectsBtn_@item.IdClaim">
                                @if (item.IdAccountKumi != null)
                                {
                                    <a class="dropdown-item" title="Лицевой счет КУМИ" aria-label="Лицевой счет КУМИ"
                                       asp-controller="KumiAccounts" asp-action="Details" asp-route-idAccount="@item.IdAccountKumi" asp-route-returnUrl="@($"{Context.Request.Scheme}://{Context.Request.Host}{Context.Request.Path}{Context.Request.QueryString}")">Лицевой счет КУМИ</a>
                                }
                                @if (item.IdAccount != null)
                                {
                                    <a class="dropdown-item" title="Лицевой счет БКС (основной)" aria-label="Лицевой счет БКС (основной)"
                                       asp-controller="PaymentAccounts" asp-action="Details" asp-route-idAccount="@item.IdAccount" asp-route-returnUrl="@($"{Context.Request.Scheme}://{Context.Request.Host}{Context.Request.Path}{Context.Request.QueryString}")">Лицевой счет БКС (основной)</a>
                                }
                                @if (item.IdAccountAdditional != null)
                                {
                                    <a class="dropdown-item" title="Лицевой счет БКС (дополнительный)" aria-label="Лицевой счет БКС (дополнительный)"
                                       asp-controller="PaymentAccounts" asp-action="Details" asp-route-idAccount="@item.IdAccountAdditional" asp-route-returnUrl="@($"{Context.Request.Scheme}://{Context.Request.Host}{Context.Request.Path}{Context.Request.QueryString}")">Лицевой счет БКС (дополнительный)</a>
                                }
                            </div>
                        </div>

                        <div class="btn-group" role="group" aria-label="Отчеты">
                            <button class="btn btn-success oi oi-document dropdown-toggle" type="button" title="Отчеты" aria-label="Отчеты" id="reportsBtn_@item.IdClaim" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"></button>
                            <div class="dropdown-menu dropdown-menu-right" aria-labelledby="reportsBtn_@item.IdClaim">
                                <a class="dropdown-item rr-report-request-to-bsk" href="#" title="Запрос в БКС" aria-label="Запрос в БКС" data-id-claim="@item.IdClaim">Запрос в БКС</a>
                                <a class="dropdown-item rr-report-memo-to-lawyers" href="#" title="СЗ в юридический отдел" aria-label="СЗ в юридический отдел" data-id-claim="@item.IdClaim">СЗ в юридический отдел</a>
                            </div>
                        </div>
                    </div>
                </td>
            </tr>
        }
    </tbody>
</table>