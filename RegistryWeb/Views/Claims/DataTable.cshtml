@using RegistryWeb.Extensions;
@using RegistryWeb.ViewOptions;
@using RegistryWeb.SecurityServices;
@using RegistryWeb.ViewModel;
@using RegistryServices.ViewModel.KumiAccounts;
@model RegistryServices.ViewModel.Claims.ClaimsVM;

@{
    var ids = Context.Session.Get<List<int>>("idClaims") ?? new List<int>();
    var check = "";

    Context.Session.Set("Controller", "Claims");
    Context.Session.Set("Action", "Index");
    Context.Session.Set("OrderOptions", Model.OrderOptions);
    Context.Session.Set("FilterOptions", Model.FilterOptions);
    Context.Session.Set("PageOptions", Model.PageOptions);
    var securityService = (SecurityService)ViewData["SecurityService"];
}

<table class="table table-hover c-table">
    <thead>
        <tr style="align-content: center;">
            <th class="r-table-header-cell">
            </th>
            <th class="r-table-header-cell" style="width:70px;">
                №
                @if (Model.OrderOptions.OrderDirection == OrderDirection.Descending && Model.OrderOptions.OrderField == "IdClaim")
                {
                    <a href="#" title="Сортировка по реестровому номеру" class="oi oi-sort-descending sort c-sorted" data-order-field="IdClaim" data-order-direction="0"></a>
                }
                else
                {
                    <a href="#" title="Сортировка по реестровому номеру" class="oi oi-sort-ascending sort @(Model.OrderOptions.OrderField == "IdClaim" ? "c-sorted" : "")"
                       data-order-field="IdClaim" data-order-direction="@(Model.OrderOptions.OrderField == "IdClaim" ? "1" : "0")"></a>
                }
            </th>
            <th class="r-table-header-cell" style="width: 35%">
                Адрес / ЛС
                @if (Model.OrderOptions.OrderDirection == OrderDirection.Descending && Model.OrderOptions.OrderField == "Address")
                {
                    <a href="#" title="Сортировка по адресу жилищного фонда" class="oi oi-sort-descending sort c-sorted" data-order-field="Address" data-order-direction="0"></a>
                }
                else
                {
                    <a href="#" title="Сортировка по адресу жилищного фонда" class="oi oi-sort-ascending sort @(Model.OrderOptions.OrderField == "Address" ? "c-sorted" : "")"
                       data-order-field="Address" data-order-direction="@(Model.OrderOptions.OrderField == "Address" ? "1" : "0")"></a>
                }
            </th>
            <th class="r-table-header-cell">
                Информация о ПИР
                @if (Model.OrderOptions.OrderDirection == OrderDirection.Descending && Model.OrderOptions.OrderField == "AtDate")
                {
                    <a href="#" title="Сортировка по дате формирования"
                       class="oi oi-sort-descending sort c-sorted" data-order-field="AtDate" data-order-direction="0"></a>
                }
                else
                {
                    <a href="#" title="Сортировка по дате формирования"
                       class="oi oi-sort-ascending sort @(Model.OrderOptions.OrderField == "AtDate" ? "c-sorted" : "")"
                       data-order-field="AtDate" data-order-direction="@(Model.OrderOptions.OrderField == "AtDate" ? "1" : "0")"></a>
                }
            </th>
            <th class="r-table-header-cell d-none d-lg-table-cell" style="min-width: 250px">
                Суммы к взысканию
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Claims)
        {
            List<KumiAccountTenancyInfoVM> kumiTenancyInfo = null;
            List<KumiAccountTenancyInfoVM> activeKumiTenancyInfo = null;
            if (item.IdAccountKumi != null && Model.TenancyInfoKumi.ContainsKey(item.IdAccountKumi.Value))
            {
                kumiTenancyInfo = Model.TenancyInfoKumi[item.IdAccountKumi.Value];
                activeKumiTenancyInfo = kumiTenancyInfo.Where(r => r.TenancyProcess.TenancyPersons.Any(p => p.ExcludeDate == null || p.ExcludeDate > DateTime.Now)
                && (r.TenancyProcess.RegistrationNum == null || !r.TenancyProcess.RegistrationNum.EndsWith("н"))).ToList();
            }

            RegistryDb.Models.Entities.Payments.Payment lastPaymentInfo = null;
            if (item.IdAccount != null && Model.LastPaymentInfo.ContainsKey(item.IdAccount.Value))
            {
                lastPaymentInfo = Model.LastPaymentInfo[item.IdAccount.Value];
            }
            RegistryDb.Models.Entities.Payments.Payment lastPaymentInfoAdditional = null;
            if (item.IdAccountAdditional != null && Model.LastPaymentInfo.ContainsKey(item.IdAccountAdditional.Value))
            {
                lastPaymentInfoAdditional = Model.LastPaymentInfo[item.IdAccountAdditional.Value];
            }

            var lastClaimState = item.ClaimStates.OrderByDescending(cs => cs.IdState).FirstOrDefault();
            var isOpenedClaim = (lastClaimState == null || lastClaimState.IdStateType != 6);

            <tr style="position: relative">
                @if (ids.Contains(item.IdClaim))
                {
                    check = "checked";
                }
                else
                {
                    check = "";
                }
                <td class="align-middle"><input type="checkbox" class="idCheckbox" data-id="@item.IdClaim" @Html.Raw(check) /></td>

                <td class="text-center" style="@(isOpenedClaim ? "background-color: #FEDCDC" : ""); font-weight: bold; vertical-align: middle" title="@(isOpenedClaim ? "Претензионно-исковая работа не завершена" : "")">
                    @item.IdClaim

                    @if (item.ClaimPersons.Count() != 0)
                    {
                        var IsClaimer = item.ClaimPersons.FirstOrDefault(c => c.IsClaimer) != null ? true : false;

                        @if (IsClaimer)
                        {
                            var hasPass = item.ClaimPersons.FirstOrDefault(c => c.IsClaimer).Passport != null ? true : false;

                            @if (!hasPass)
                            {
                                <br><span class="oi oi-bell text-danger mt-2" title="У ответчика отсутствуют паспортные данные" style="font-size: 80%"></span>
                            }
                        }
                        else
                        {
                            <br><span class="oi oi-bell text-danger mt-2" title="Среди членов семьи отсутствуют наниматель" style="font-size: 80%"></span>
                        }

                    }
                    else
                    {
                        <br><span class="oi oi-bell text-danger mt-2" title="Члены семьи ответчика отсутствуют" style="font-size: 80%"></span>
                    }
                </td>
                <td>
                    @{
                        var accountBks = "";
                        var accountKumi = "";
                        if (item.IdAccount != null)
                        {
                            accountBks = item.IdAccountNavigation.Account + (item.IdAccountAdditionalNavigation == null ? "" : " / " + item.IdAccountAdditionalNavigation.Account);
                        }
                        if (item.IdAccountKumi != null)
                        {
                            accountKumi = item.IdAccountKumiNavigation.Account;
                        }
                    }
                    <div class="mb-1">
                        @if (accountKumi == accountBks && accountBks != "")
                        {
                            <b>Лицевой счет КУМИ/БКС:</b> @accountKumi
                        }
                        else
                        {
                            if (item.IdAccountKumi != null)
                            {
                                <b>Лицевой счет КУМИ:</b> @accountKumi

                            } 
                            if (item.IdAccount != null)
                            {
                                <br>
                                <b>Лицевой счет БКС:</b> @accountBks
                        
                            }
                        }
                    </div>

                    @{
                        List<Address> rentObjectsKumi = null;
                        List<Address> rentObjectsBks = null;
                        if (item.IdAccountKumi != null)
                        {
                            if (kumiTenancyInfo != null && kumiTenancyInfo.Any())
                            {
                                rentObjectsKumi = kumiTenancyInfo.FirstOrDefault().RentObjects.Select(r => r.Address).ToList();
                                if (activeKumiTenancyInfo.Any())
                                {
                                    rentObjectsKumi = activeKumiTenancyInfo.FirstOrDefault().RentObjects.Select(r => r.Address).ToList();
                                }
                            }
                        }
                        if (item.IdAccount != null && Model.RentObjectsBks.ContainsKey(item.IdAccount.Value))
                        {
                            rentObjectsBks = Model.RentObjectsBks[item.IdAccount.Value];
                        }
                    }

                    @if (item.IdAccountKumi != null)
                    {
                        <div>
                            @if (rentObjectsKumi != null)
                            {
                                @foreach (var rentObject in rentObjectsKumi)
                                {
                                    @await Component.InvokeAsync("ClaimsAddressComponent", new { address = rentObject, idClaim = item.IdClaim })
                                }
                            }
                            else
                            {
                                <span class="text-danger"><i>не привязан процесс найма</i></span>
                            }
                        </div>
                    }
                    else
                    if (item.IdAccount != null)
                    {
                        @if (rentObjectsBks != null)
                        {
                            <div>
                                @foreach (var address in rentObjectsBks)
                                {
                                    @await Component.InvokeAsync("ClaimsAddressComponent", new { address = address, idClaim = item.IdClaim })
                                }
                            </div>
                        }
                        else
                       if (item.IdAccount != null)
                        {
                            <div class="row">
                                <div class="col-auto">
                                    <button class="btn btn-success oi oi-home mr-1 mt-2 disabled dropdown-toggle" type="button" title="Здания и помещения" aria-label="Здания и помещения"></button>
                                </div>
                                <div class="col-lg-9 col-md-8 mt-1">
                                    @item.IdAccountNavigation.Crn, @item.IdAccountNavigation.RawAddress
                                </div>
                            </div>
                        }
                    }
                </td>
                <td>
                    <div class="dopinfo-alt">
                        @if (lastPaymentInfo != null)
                        {
                            <div>
                                Наниматель: <span class="text-primary"><b>@lastPaymentInfo.Tenant</b></span>
                            </div>
                        }

                        <div>
                            Дата начала ПИР: @(item.AtDate != null ? item.AtDate.Value.ToString("dd.MM.yyyy") : "н/а")
                        </div>

                        @if (item.StartDeptPeriod != null || item.EndDeptPeriod != null)
                        {
                            var period = "";
                            if (item.StartDeptPeriod != null)
                            {
                                period += "с " + item.StartDeptPeriod.Value.ToString("dd.MM.yyyy");
                            }
                            if (item.StartDeptPeriod != null)
                            {
                                period += " ";
                            }
                            if (item.EndDeptPeriod != null)
                            {
                                period += "по " + item.EndDeptPeriod.Value.ToString("dd.MM.yyyy");
                            }
                            else
                            {
                                period += "бессрочно";
                            }

                            <div>
                                Период: @period
                            </div>
                        }

                        @{
                            var courtClaimState = item.ClaimStates.FirstOrDefault(r => r.IdStateType == 4);
                        }
                        @if (courtClaimState != null && !string.IsNullOrEmpty(courtClaimState.CourtOrderNum))
                        {
                            <div>
                                Номер с/п: @courtClaimState.CourtOrderNum
                            </div>
                        }

                        @if (lastClaimState != null)
                        {
                            var stateType = Model.StateTypes.FirstOrDefault(st => st.IdStateType == lastClaimState.IdStateType);
                            <div>
                                Состояние ИР: <span class="text-success"><b>@stateType.StateType</b></span> <sup><span class="badge badge-danger pb-1">@(item.EndedForFilter ? "Искл. при фильтрации ЛС" : "")</span></sup>
                            </div>
                            @if (lastClaimState.DateStartState != null)
                            {
                                <div>
                                    Дата установки: @lastClaimState.DateStartState.Value.ToString("dd.MM.yyyy")
                                </div>
                            }
                            @if (lastClaimState.Description != null)
                            {
                                <div>
                                    Примечание к состоянию: @lastClaimState.Description
                                </div>
                            }
                            @if (lastClaimState.CourtOrderCompleteReason != null)
                            {
                                <div>
                                    Причина завершения: @lastClaimState.CourtOrderCompleteReason
                                </div>
                            }
                        }
                    </div>
                </td>
                <td class="d-none d-lg-table-cell">
                    <div class="dopinfo-alt">
                        <div>
                            <b>ПИР:</b><br />
                            <div>
                                Найм: @(item.AmountTenancy ?? 0) руб.
                            </div>
                            <div>
                                Пени: @(item.AmountPenalties ?? 0) руб.
                            </div>
                            <div>
                                ДГИ: @(item.AmountDgi ?? 0) руб.
                            </div>
                            @if (item.AmountPadun != null && item.AmountPadun != 0)
                            {
                                <div>
                                    Падун: @(item.AmountPadun ?? 0) руб.
                                </div>
                            }
                            @if (item.AmountPkk != null && item.AmountPkk != 0)
                            {
                                <div>
                                    ПКК: @(item.AmountPkk ?? 0) руб.
                                </div>
                            }
                            <div><b>Итого:</b> @((item.AmountTenancy ?? 0) + (item.AmountPenalties ?? 0) + (item.AmountDgi ?? 0) + (item.AmountPadun ?? 0) + (item.AmountPkk ?? 0)) руб.</div>
                        </div>

                        @if (lastPaymentInfo != null)
                        {
                            <div class="mt-2">
                                <b>Текущая задолженность:</b><br />
                                <div class="row ml-0 mr-0">
                                    <div class="@(lastPaymentInfoAdditional != null ? "col-6 pl-0 pr-1" : "")">
                                        @if (lastPaymentInfoAdditional != null)
                                        {
                                            <b>Осн. ЛС:</b><br />
                                        }
                                        <div>
                                            Найм: @lastPaymentInfo.BalanceOutputTenancy руб.
                                        </div>
                                        <div>
                                            Пени: @lastPaymentInfo.BalanceOutputPenalties руб.
                                        </div>
                                        <div>
                                            ДГИ: @lastPaymentInfo.BalanceOutputDgi руб.
                                        </div>
                                    </div>
                                    @if(lastPaymentInfoAdditional != null)
                                    {
                                        <div class="col-6 pl-1 pr-0">
                                            <b>Доп. ЛС:</b><br />
                                            <div>
                                                Найм: @lastPaymentInfoAdditional.BalanceOutputTenancy руб.
                                            </div>
                                            <div>
                                                Пени: @lastPaymentInfoAdditional.BalanceOutputPenalties руб.
                                            </div>
                                            <div>
                                                ДГИ: @lastPaymentInfoAdditional.BalanceOutputDgi руб.
                                            </div>
                                        </div>
                                    }
                                </div>
                            </div>
                        }
                    </div>

                    <div class="btn-group rr-opacity-item-menu" role="group" aria-label="Панель доступа">
                        @if (securityService.HasPrivilege(Privileges.ClaimsWrite))
                        {
                            <a class="btn btn-primary oi oi-eye" title="Подробнее" aria-label="Подробнее"
                               asp-controller="Claims" asp-action="Details" asp-route-idClaim="@item.IdClaim" asp-route-action="Details" asp-route-returnUrl="@($"{Context.Request.Scheme}://{Context.Request.Host}{Context.Request.Path}{Context.Request.QueryString}")"></a>
                            <a class="btn btn-outline-dark oi oi-pencil" title="Изменить" aria-label="Изменить"
                               asp-controller="Claims" asp-action="Edit" asp-route-idClaim="@item.IdClaim" asp-route-action="Edit" asp-route-returnUrl="@($"{Context.Request.Scheme}://{Context.Request.Host}{Context.Request.Path}{Context.Request.QueryString}")"></a>
                            <a class="btn btn-danger oi oi-x" title="Удалить" aria-label="Удалить"
                               asp-controller="Claims" asp-action="Delete" asp-route-idClaim="@item.IdClaim" asp-route-returnUrl="@($"{Context.Request.Scheme}://{Context.Request.Host}{Context.Request.Path}{Context.Request.QueryString}")"></a>
                        }
                        else
                        {
                            <a class="btn btn-primary oi oi-eye" title="Подробнее" aria-label="Подробнее"
                               asp-controller="Claims" asp-action="Details" asp-route-idClaim="@item.IdClaim" asp-route-action="Details" asp-route-returnUrl="@($"{Context.Request.Scheme}://{Context.Request.Host}{Context.Request.Path}{Context.Request.QueryString}")"></a>
                        }


                        <div class="btn-group" role="group" aria-label="Панель доступа">

                            <button class="btn btn-dark oi oi-grid-two-up dropdown-toggle" type="button" title="Связанные объекты" aria-label="Связанные объекты" id="objectsBtn_@item.IdClaim" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"></button>
                            <div class="dropdown-menu dropdown-menu-right" aria-labelledby="objectsBtn_@item.IdClaim">
                                @if (item.IdAccountKumi != null)
                                {
                                <a class="dropdown-item" title="Лицевой счет КУМИ" aria-label="Лицевой счет КУМИ"
                                   asp-controller="KumiAccounts" asp-action="Details" asp-route-idAccount="@item.IdAccountKumi" asp-route-returnUrl="@($"{Context.Request.Scheme}://{Context.Request.Host}{Context.Request.Path}{Context.Request.QueryString}")">Лицевой счет@(item.IdAccount != null && item.IdAccountKumi != null ? " КУМИ" : "")</a>
                                } 
                                @if (item.IdAccount != null)
                                {
                            <a class="dropdown-item" title="Лицевой счет БКС (основной)" aria-label="Лицевой счет БКС (основной)"
                               asp-controller="PaymentAccounts" asp-action="PaymentAccountsTable" asp-route-idAccount="@item.IdAccount" asp-route-returnUrl="@($"{Context.Request.Scheme}://{Context.Request.Host}{Context.Request.Path}{Context.Request.QueryString}")">Лицевой счет БКС @( item.IdAccountAdditional != null ? "(основной)":"")</a>
                                @if (item.IdAccountAdditional != null)
                                {
                            <a class="dropdown-item" title="Лицевой счет БКС (дополнительный)" aria-label="Лицевой счет БКС (дополнительный)"
                               asp-controller="PaymentAccounts" asp-action="PaymentAccountsTable" asp-route-idAccount="@item.IdAccountAdditional" asp-route-returnUrl="@($"{Context.Request.Scheme}://{Context.Request.Host}{Context.Request.Path}{Context.Request.QueryString}")">Лицевой счет БКС (дополнительный)</a>
                                }
                                }
                            </div>
                        </div>

                        <div class="btn-group" role="group" aria-label="Отчеты">
                            <button class="btn btn-success oi oi-document dropdown-toggle" type="button" title="Отчеты" aria-label="Отчеты" id="reportsBtn_@item.IdClaim" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"></button>
                            <div class="dropdown-menu dropdown-menu-right" aria-labelledby="reportsBtn_@item.IdClaim">
                                <a class="dropdown-item rr-report-request-to-bsk" href="#" title="Запрос в БКС" aria-label="Запрос в БКС" data-id-claim="@item.IdClaim" data-id-reportbkstype="1">Запрос в БКС</a>
                                <a class="dropdown-item rr-report-request-to-bsk" href="#" title="Запрос в БКС" aria-label="Запрос в БКС (с периодом расчета)" data-id-claim="@item.IdClaim" data-id-reportbkstype="2">Запрос в БКС (с периодом расчета)</a>
                                <a class="dropdown-item rr-report-memo-to-lawyers" href="#" title="СЗ в юридический отдел" aria-label="СЗ в юридический отдел" data-id-claim="@item.IdClaim">СЗ в юридический отдел</a>
                            </div>
                        </div>
                    </div>
                </td>
            </tr>
        }
    </tbody>
</table>